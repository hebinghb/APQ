devtools::install_github("hebinghb/APQ")
library(devtools)
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
devtools::install_github("hebinghb/APQ")
library(APQ)
setwe('../')
setwd('../')
getwd()
data<-Import("20181028_202636_HLS9_36_WILD_Report.csv")
quantity<-APQ(data,"DIA")
write.table(quantity,file="DIA_demo.txt")
data<-Import.DDA("peptides.txt ")
quantity<-APQ(data,"DDA")
write.table(quantity,file="DDA_demo.txt")
data<-Import.DDA("peptides.txt")
quantity<-APQ(data,"DDA")
write.table(quantity,file="DDA_demo.txt")
source("APQ.R")
source("APQ.R")
quantity<-APQ(data,"DDA")
quantity<-APQ(data,"DDA")
source("APQ.R")
quantity<-APQ(data,"DDA")
source("Import.R")
data<-Import.DDA("peptides.txt")
quantity<-APQ(data,"DDA")
write.table(quantity,file="DDA_demo.txt")
source("Import.R")
data<-Import.DDA("peptides.txt")
quantity<-APQ(data,"DDA")
write.table(quantity,file="DDA_demo.txt")
source("APQ.R")
data<-Import.DDA("peptides.txt")
quantity<-APQ(data,"DDA")
write.table(quantity,file="DDA_demo.txt")
length(unique(data$Proteins))
data$Proteins
dim(data)
raw_data <- read.csv(file="peptides.txt",sep = "\t")
Proteins <- raw_data$Leading razor protein
Proteins <- raw_data$Leading
Proteins
temp_data <- raw_data[-(grep("CON_",Proteins)),]
Proteins <- temp_data$Leading
clean_data <- temp_data[-(grep("REV_",Proteins)),]
length(clean_data)
dim(clean_data)
dim(temp_data)
source("Import.R")
temp_data <- raw_data[-(grep("CON_",Proteins)),]
Proteins <- temp_data$Leading
clean_data <- temp_data[-(grep("REV_",Proteins)),]
data<-Import.DDA("peptides.txt")
quantity<-APQ(data,"DDA")
write.table(quantity,file="DDA_demo.txt")
library(APQ)
data<-Import.DDA("peptides.txt")
quantity<-APQ(data,"DDA")
write.table(quantity,file="DDA_demo.txt")
library(APQ)
data<-Import.DDA("peptides.txt")
quantity<-APQ(data,"DDA")
write.table(quantity,file="DDA_demo.txt")
devtools::install_github("hebinghb/APQ")
library(APQ)
data<-Import.DDA("peptides.txt")
quantity<-APQ(data,"DDA")
write.table(quantity,file="DDA_demo.txt")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
biocLite("ALL")
install.packages("ALL")
source("https://bioconductor.org/biocLite.R")
biocLite("ALL")
library(ALL)
data("ALL")
library(limma)
biocLite("limma")
library(limma)
eset<-ALL[,ALL$mol.biol %in% c("BCR/ABL","ALL1/AF4")]
f<-factor(as.character(eset$mol.biol))
design<-model.matrix(~f)
fit<-eBayes(lmFit(eset,design))
selected  <- p.adjust(fit$p.value[, 2]) <0.001
esetSel <- eset[selected,]
library(hgu95av2.db)
biocLite(hgu95av2.db)
install.packages(hgu95av2.db)
biocLite("hgu95av2.db")
library(hgu95av2.db)
biocLite("hgu95av2.db")
